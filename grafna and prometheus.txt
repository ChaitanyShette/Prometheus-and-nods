*******steps*****
Download and install Prometheus on the monitoring system.
Configure Prometheus to run as a service.
Install Node Exporter on all clients.
Configure Prometheus to monitor the clients.
Install and deploy the Grafana server.
Integrate Grafana and Prometheus.




********Prometheus installation***********

wget https://github.com/prometheus/prometheus/releases/download/v2.37.6/prometheus-2.37.6.linux-amd64.tar.gz
[download prometheus]
tar xvfz prometheus-*.tar.gz [untar prometheus]
rm prometheus-*.tar.gz [trmove tar file]
sudo mkdir /etc/prometheus /var/lib/prometheus [create directory for prometheus]
cd prometheus-2.37.6.linux-amd64 [open untar directory]
sudo mv prometheus promtool /usr/local/bin/ [move those files in location bin]
sudo mv prometheus.yml /etc/prometheus/prometheus.yml [move yml file to /etc/prometheus/prometheus.yml]
sudo mv consoles/ console_libraries/ /etc/prometheus/ [move those files in /etc/prometheus]
prometheus --version [check version]


configure prometheus as service
sudo useradd -rs /bin/false prometheus [create system user with shell]
sudo chown -R prometheus: /etc/prometheus /var/lib/prometheus [prometheus will be owner recursively]
sudo vi /etc/systemd/system/prometheus.service [create service file]


[Unit]
Description=Prometheus
Wants=network-online.target
After=network-online.target

[Service]
User=prometheus
Group=prometheus
Type=simple
Restart=on-failure
RestartSec=5s
ExecStart=/usr/local/bin/prometheus \
    --config.file /etc/prometheus/prometheus.yml \
    --storage.tsdb.path /var/lib/prometheus/ \
    --web.console.templates=/etc/prometheus/consoles \
    --web.console.libraries=/etc/prometheus/console_libraries \
    --web.listen-address=0.0.0.0:9090 \
    --web.enable-lifecycle \
    --log.level=info

[Install]
WantedBy=multi-user.target



sudo systemctl daemon-reload
sudo systemctl enable prometheus
sudo systemctl start prometheus
sudo systemctl status prometheus
 http://64.227.149.169:9090                


*************Installation and Configure Node Exporter on the Client**********


wget https://github.com/prometheus/node_exporter/releases/download/v1.5.0/node_exporter-1.5.0.linux-amd64.tar.gz 
[download node exporter]
tar xvfz node_exporter-*.tar.gz [untar node exporter]
sudo mv node_exporter-1.5.0.linux-amd64/node_exporter /usr/local/bin [move files to specify locations]                        
rm -r node_exporter-1.5.0.linux-amd64* [remove tar directory]
node_exporter 
sudo useradd -rs /bin/false node_exporter [create system user with shell]
sudo vi /etc/systemd/system/node_exporter.service [create service file]





[Unit]
Description=Node Exporter
Wants=network-online.target
After=network-online.target

[Service]
User=node_exporter
Group=node_exporter
Type=simple
Restart=on-failure
RestartSec=5s
ExecStart=/usr/local/bin/node_exporter

[Install]
WantedBy=multi-user.target





sudo systemctl enable node_exporter
sudo systemctl daemon-reload
sudo systemctl start node_exporter
sudo systemctl status node_exporter



**********installation and Configure Prometheus with Monitor Client Nodes********
sudo vi /etc/prometheus/prometheus.yml [edit file in prometheus server]


...
- job_name: "node-exporter"
  scrape_interval: 10s
  static_configs:
    - targets: ["server-ip:9100"]



sudo systemctl restart prometheus	  
	 
	 
	 *********Installation and Deploy the Grafana Server**********
	 
	 
sudo apt-get install -y apt-transport-https software-properties-common [install those two pkgs]
sudo wget -q -O /usr/share/keyrings/grafana.key https://apt.grafana.com/gpg.key [download pkg with error quite mode and -o for location]
echo "deb [signed-by=/usr/share/keyrings/grafana.key] https://apt.grafana.com stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list
[Add the Grafana “stable releases” repository.]
sudo apt-get update
sudo apt-get install grafana
sudo systemctl daemon-reload
sudo systemctl enable grafana-server.service
sudo systemctl start grafana-server
sudo systemctl status grafana-server
	
http://server-ip:3000               [username-admin    password-admin]              
	
	
*********postgres_exporter install***********

wget https://github.com/prometheus-community/postgres_exporter/releases/download/v0.9.0/postgres_exporter-0.9.0.linux-amd64.tar.gz
mkdir /opt/postgres_exporter [create directory]
cd /opt/postgres_exporter [go to directory]
wget https://github.com/prometheus-community/postgres_exporter/releases/download/v0.9.0/postgres_exporter-0.9.0.linux-amd64.tar.gz
[download tar file]
tar xvfz postgres_exporter-*.linux-amd64.tar.gz [untar directory]
cd postgres_exporter-0.9.0.linux-amd64/ [go to directory]
sudo cp postgres_exporter /usr/local/bin [copy file in bin]
cd /opt/postgres_exporter [go to directory]
sudo nano postgres_exporter.env [create env]

DATA_SOURCE_NAME="postgresql://postgres:rhythM2023@server-private-ip:5432/?sslmode=disable" [give all details]

sudo useradd -rs /bin/false postgres [create user]
vi /etc/systemd/system/postgres_exporter.service [create and edit service file]


[Unit]
Description=Prometheus exporter for Postgresql
Wants=network-online.target
After=network-online.target
[Service]
User=postgres
Group=postgres
WorkingDirectory=/opt/postgres_exporter
EnvironmentFile=/opt/postgres_exporter/postgres_exporter.env
ExecStart=/usr/local/bin/postgres_exporter --web.listen-address=192.168.56.106:9100 --web.telemetry-path=/metrics
Restart=always
[Install]
WantedBy=multi-user.target

sudo systemctl daemon-reload
sudo systemctl start postgres_exporter
sudo systemctl enable postgres_exporter


************prometheus command***********
prometheus_target_interval_length_seconds
	prometheus_target_interval_length_seconds{quantile="0.99"}
	count(prometheus_target_interval_length_seconds)
	rate(prometheus_tsdb_head_chunks_created_total[1m])
	
	
	(node_filesystem_size_bytes{mountpoint="/"}-node_filesystem_free_bytes{mountpoint="/"})/(1024*1024)





************alertmanager*********

wget https://github.com/prometheus/alertmanager/releases/download/v0.25.0/alertmanager-0.25.0.linux-amd64.tar.gz
tar xvfz alertmanager-0.25.0.linux-amd64.tar.gz
mkdir -p /etc/alertmanager
mkdir -p /var/lib/alertmanager
mkdir -p /etc/amtool

cp alertmanager-0.25.0.linux-amd64/alertmanager /usr/local/bin/
cp alertmanager-0.25.0.linux-amd64/alertmanager.yml /etc/alertmanager
cp alertmanager-0.25.0.linux-amd64/amtool /usr/local/bin/

sudo useradd -rs /bin/false alertmanager
chown alertmanager:alertmanager /usr/local/bin/alertmanager
chown -R alertmanager:alertmanager /etc/alertmanager
chown alertmanager:alertmanager /var/lib/alertmanager

vi /etc/systemd/system/alertmanager.service


[Unit]
Description=Prometheus Alertmanager
Wants=network-online.target
After=network-online.target

[Service]
User=alertmanager
Group=alertmanager
Type=simple
ExecStart=/usr/local/bin/alertmanager \
  --config.file /etc/alertmanager/alertmanager.yml \
  --storage.path /var/lib/alertmanager/

[Install]
WantedBy=multi-user.target


systemctl daemon-reload
sudo systemctl enable alertmanager
sudo systemctl start alertmanager

192.168.18.34
sudo vi /etc/amtool/config.yml

alertmanager.url: http://localhost:9093

/usr/local/bin/amtool config show

nano /etc/alertmanager/alertmanager.yml



global:
  resolve_timeout: 1m

route:
  group_by: ['alertname']
  group_wait: 30s
  group_interval: 5m
  repeat_interval: 1h
  receiver: 'email'
receivers:
 # - name: 'web.hook'
  #  webhook_configs:
  #    - url: 'http://127.0.0.1:5001/'
  - name: 'email'
    email_configs:
    - to: 'chaitany@gmail.com, kiran@gmail.com, rhushikesh@gmail.com'
      from: 'chaitany@gmail.com'
      smarthost: smtp.gmail.com:587
      auth_username: 'chaitany@gmail.com'
      auth_identity: 'chaitany@gmail.com'
      auth_password: 'password or token'
      send_resolved: true

inhibit_rules:
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'dev', 'instance']
	
	
	
nano /etc/prometheus/alert.rules.yml


groups:
- name: node-exporter
  rules:
  - alert: HighMemoryUsage
    expr: 100 * ( (1 - ((avg_over_time(node_memory_MemFree_bytes[5m]) + avg_over_time(node_memory_Cached_bytes[5m]) + avg_over_time(node_memory_Buffers_bytes[5m])) / avg_over_time(node_memory_MemTotal_bytes[5m]))) ) > 65
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: "High Memory Usage"
      description: "More than 65% of memory is used - Instance: {{ $labels.instance }}"

  - alert: HighCPULoad
    expr: 100 - (avg by (instance) (irate(node_cpu_seconds_total{mode="idle"}[1m])) * 100) > 65
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: "High CPU Load"
      description: "More than 65% of CPU is in use - Instance: {{ $labels.instance }}"

  - alert: HighDiskUsage
    expr: 100 - ( (avg(node_filesystem_avail_bytes) by (instance) / avg(node_filesystem_size_bytes) by (instance) * 100) ) > 65
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: "High Disk Usage"
      description: "More than 65% of disk space is used - Instance: {{ $labels.instance }}"
	  
*************nginx prometheus exporter*********

sudo apt update
*****install dependency****
sudo apt install curl gnupg2 ca-certificates lsb-release ubuntu-keyring

curl https://nginx.org/keys/nginx_signing.key | gpg --dearmor | sudo tee /usr/share/keyrings/nginx-archive-keyring.gpg >/dev/null

gpg --dry-run --quiet --no-keyring --import --import-options import-show /usr/share/keyrings/nginx-archive-keyring.gpg

echo "deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] http://nginx.org/packages/ubuntu `lsb_release -cs` nginx" | sudo tee /etc/apt/sources.list.d/nginx.list

sudo apt update
apt-cache policy nginx
sudo apt install nginx=1.22.1-1~jammy

nginx -V

sudo systemctl status nginx

sudo systemctl start nginx

sudo systemctl status nginx

sudo -s

vim /etc/nginx/conf.d/status.conf

server {
    listen 80;
    # Optionally: allow access only from localhost
    # listen 127.0.0.1:80;

    server_name server-ip or domain;

    location /status {
        stub_status;
    }
}

nginx -t

systemctl reload nginx

check url http://server-ip/status

mkdir /opt/nginx-exporter
cd /opt/nginx-exporter

sudo useradd --system --no-create-home --shell /bin/false nginx-exporter

curl -L https://github.com/nginxinc/nginx-prometheus-exporter/releases/download/v0.11.0/nginx-prometheus-exporter_0.11.0_linux_amd64.tar.gz -o nginx-prometheus-exporter_0.11.0_linux_amd64.tar.gz

tar -zxf nginx-prometheus-exporter_0.11.0_linux_amd64.tar.gz

rm nginx-prometheus-exporter_0.11.0_linux_amd64.tar.gz

./nginx-prometheus-exporter --version

chown -R nginx-exporter:nginx-exporter /opt/nginx-exporter

vim /etc/systemd/system/nginx-exporter.service

[Unit]
Description=Nginx Exporter
Wants=network-online.target
After=network-online.target

StartLimitIntervalSec=0

[Service]
User=nginx-exporter
Group=nginx-exporter
Type=simple
Restart=on-failure
RestartSec=5s

ExecStart=/opt/nginx-exporter/nginx-prometheus-exporter \
    -nginx.scrape-uri=http://server-ip/status \
	-nginx.scrape-uri=https://example.com/status \
	-nginx.scrape-uri=https://algorhythms.in/status 
	-web.listen-address=:9113

[Install]
WantedBy=multi-user.target


systemctl enable nginx-exporter
systemctl start nginx-exporter
systemctl status nginx-exporter
journalctl -u nginx-exporter -f --no-pager
curl localhost:9113/metrics

add job in prometheus.yml file

**************
